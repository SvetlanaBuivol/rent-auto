{"version":3,"file":"static/js/581.f3a8ba33.chunk.js","mappings":"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","sources":["components/CarItem/CarItem.styled.jsx","components/CarItem/CarItem.jsx","helpers/getAddressString.js","redux/adverts/advertsSelectors.js","components/CarsList/CardList.styled.jsx","components/CarsList/CarsList.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AdvertCard = styled.li`\n  width: 274px;\n overflow: hidden;\n`;\n\nexport const CarImg = styled.img`\n    height: 268px;\n    width: 100%;\n    object-fit: cover;\n    border-radius: 14px;\n    margin-bottom: 14px;\n`;\n\nexport const CarHeadWrap = styled.div`\n   display: flex;\n   justify-content: space-between;\n   margin-bottom: 8px;\n`;\n\nexport const CarHeader = styled.h2`\n    font-weight: 500;\n    font-size: 16px;\n`;\n\nexport const Price = styled.p`\n   font-weight: 500;\n    font-size: 16px;\n`;\n\nexport const CarInfo = styled.p`\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 18px;\n    margin-bottom: 28px;\n    color: var( --secondTextCl);\n`;\n\nexport const LearnMoreBtn = styled.button`\n    width: 100%;\n    height: 44px;\n    background-color: var(--blueCl);\n    color: var(--whiteCl);\n    border-radius: 12px;\n    font-weight: 600;\n    transition: background-color 250ms ease-in;\n\n    :hover {\n        background-color: var(--hoverBlueCl);\n    }\n`","// import { getAddressString } from \"helpers/getAddressString\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleFavorites } from 'redux/adverts/advertsSlice';\nimport { AdvertCard, CarHeader, CarImg, CarInfo, CarHeadWrap, Price, LearnMoreBtn } from './CarItem.styled';\nimport { getAddressString } from 'helpers/getAddressString';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { favoritesSelector } from \"redux/favorites/favoritesSelector\";\n\nconst CarItem = ({ car }) => {\n  const {\n    id,\n    img,\n    make,\n    model,\n    year,\n    rentalPrice,\n    rentalCompany,\n    type,\n    functionalities,\n    // accessories,\n    address,\n    // mileage,\n    } = car;\n    \n  const dispatch = useDispatch();\n\n  const handleToggleFavorites = carId => {\n    dispatch(toggleFavorites(carId));\n    };\n    \n    const formattedAddress = getAddressString(address);\n\n  return (\n    <AdvertCard>\n      <CarImg src={img} alt={`${make} ${model}`} />\n      <button type=\"button\" onClick={() => handleToggleFavorites(car)}>\n        Fav\n      </button>\n\n        <CarHeadWrap>\n          <CarHeader>{`${make}, ${year}`}</CarHeader>\n          <Price>{rentalPrice}</Price>\n        </CarHeadWrap>\n        <CarInfo>{formattedAddress} | {`${rentalCompany} | ${type} | ${id} | ${functionalities[0]}`}\n        </CarInfo>\n\n      <LearnMoreBtn type=\"button\">Learn more</LearnMoreBtn>\n    </AdvertCard>\n  );\n};\n\nexport default CarItem;\n","export const getAddressString = (address) => {\n    const addressParts = address.split(',').map(item => item.trim());\n    const city = addressParts[1];\n    const country = addressParts[2];\n    return `${city} | ${country}`;\n}\n","export const selectAllAdverts = state => state.adverts.adverts;\nexport const selectFavoriteAdverts = state => state.adverts.favorites;\n","import styled from '@emotion/styled';\n\nexport const CardListWrap = styled.ul`\n@media screen and (max-width: 767px) {\n    gap: 29px ;\n    margin-bottom: 40px;\n}\n    display: flex;\n    justify-content: center;\n    gap: 50px 29px ;\n    flex-wrap: wrap;\n    margin-bottom: 100px;\n`;\n\nexport const LoadMoreBtn = styled.button`\nmargin-left: auto;\nmargin-right: auto;\n    color: var(--blueCl);\n    font-weight: 500;\n    font-size: 16px;\n    text-decoration: underline;\n\n    :hover {\n        color: var(--hoverBlueCl);\n    }\n`","import CarItem from 'components/CarItem/CarItem';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAllAdverts,\n} from 'redux/adverts/advertsSelectors';\nimport { CardListWrap, LoadMoreBtn } from './CardList.styled';\nimport { incrementPage } from 'redux/adverts/advertsSlice';\nimport { fetchAllAdvertssAsync } from 'redux/adverts/advertsOperations';\n\nconst CarsList = () => {\n    const currentPage = useSelector(state => state.adverts.currentPage)\n    const allAdverts = useSelector(selectAllAdverts);\n    const dispatch = useDispatch()\n\n    const handleLoadMore = () => {\n        dispatch(incrementPage())\n        dispatch(fetchAllAdvertssAsync(currentPage + 1))\n    }\n\n     useEffect(() => {\n        if (allAdverts.length === 0) {\n            dispatch(fetchAllAdvertssAsync(currentPage))\n        }\n     }, [dispatch, allAdverts, currentPage])\n    \n    const totalAds = allAdverts.length;\n    const isLastPage = totalAds % 12 === 0 && totalAds > 0;\n    console.log(allAdverts.length)\n  return (\n    <>\n      <CardListWrap>\n        {allAdverts.map(advert => (\n          <CarItem key={advert.id} car={advert} />\n        ))}\n          </CardListWrap>\n          {isLastPage ? (<LoadMoreBtn type='button' onClick={handleLoadMore} >Load more</LoadMoreBtn>) : (<p>You have loaded all adverts</p>) }\n    </>\n  );\n};\n\nexport default CarsList;\n","import CarsList from 'components/CarsList/CarsList';\nimport React from 'react';\n\nconst Catalog = () => {\n  return (\n    <div>\n      <CarsList />\n    </div>\n  );\n};\n\nexport default Catalog;\n"],"names":["AdvertCard","styled","_templateObject","_taggedTemplateLiteral","CarImg","_templateObject2","CarHeadWrap","_templateObject3","CarHeader","_templateObject4","Price","_templateObject5","CarInfo","_templateObject6","LearnMoreBtn","_templateObject7","_ref","car","id","img","make","model","year","rentalPrice","rentalCompany","type","functionalities","address","dispatch","useDispatch","formattedAddress","addressParts","split","map","item","trim","city","country","concat","getAddressString","_jsxs","children","_jsx","src","alt","onClick","carId","toggleFavorites","selectAllAdverts","state","adverts","CardListWrap","LoadMoreBtn","currentPage","useSelector","allAdverts","useEffect","length","fetchAllAdvertssAsync","totalAds","isLastPage","console","log","_Fragment","advert","CarItem","incrementPage","CarsList"],"sourceRoot":""}